Git笔记.txt

---------------------------------------------------

Git签名
形式:
    用户名: dom4j
    邮箱: w15635606382@gmail.com
作用: 为了区分不同的开发人员
注: 用户名和邮箱均与 GitHub账号没有任何关系


签名有全局范围和项目范围之分, 每个项目可以拥有独立的签名




github access_token
    08334d0f66ee7becf982d16eae0a39bcdddcf483



配置方式
    git config











---------------------------------------------------
git add <file>  将文件提交到暂存区
git rm --cached <file>  将文件从暂存区删除
git status  查看文件状态

已经在暂存区, 但在工作区发生了修改, 此时可以选择提交或放弃修改到暂存区
git checkout -- <file>  丢弃修改, 恢复成和暂存区一样的状态
git add <file>


git log  版本提交记录查看
git log --pretty=oneline    简洁显示 (哈希值 + 提交说明)
git log --oneline  简洁显示(部分哈希值 + 提交说明)   只显示当前版本之前的记录
git reflog 简洁显示(部分哈希值 + 指针移动数目 + 提交说明)


------------------------------------------
版本前进和后退
1. 基于索引: 前进后退都可以
git reset --hard <hash>

2. ^符号: 只能后退
git reset --hard HEAD^^^   一个^表示后退一个版本

3. ~符号: 只能后退
git reset --hard HEAD~5    ~后面加数字表示后退几个版本


reset的三个参数
  --hard:  仅仅在本地库移动HEAD指针
  --soft:  在本地库移动HEAD指针, 重置暂存区
  --mixed: 在本地库移动HEAD指针, 重置暂存区和工作区


-----------------------------------
已删除文件找回

1. 已提交至暂存区, 还未提交到本地库
git checkout -- <file>  从暂存区恢复文件

2. 已提交至本地库
git checkout -- <file>
版本回退


--------------------------------
比较文件差异

git diff <file>   工作区文件和暂存区比较
git diff HEAD <file>  工作区文件和本地库比较
git diff HEAD^^ <file>  工作区文件和本地库任意版本比较



--------------------
分支管理

git branch  查看分支
git branch <branch_name>    创建新分支
git checkout <branch_name>  切换分支


合并分支
1. 切换到被合并的分支上面
git checkout <branch_name>

2. 合并分支
git merge <branch_name>

3. 冲突解决





推送至远程库
1. github创建远程仓库
https://github.com/tanzhiyihuijian/git_demo.git

2. 在本地为远程库起别名
git remote add origin https://github.com/tanzhiyihuijian/git_demo.git
git remote -v  查看远程库

3. 推送至远程库
git push origin master























----
